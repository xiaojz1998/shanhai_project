set timezone ='UTC-0';with tmp_all_order_log as (       select       order_num,       platform_order_id,       app_id,       os,       uid,       order_type,       order_date,       created_date,       created_at,       vip_days,       to_timestamp(vip_expires_time) as end_time,       case when vip_days = 7 then (to_timestamp(vip_expires_time)::date - interval '7 day')::date           when vip_days = 30 then (to_timestamp(vip_expires_time)::date - interval '1 month')::date           when vip_days = 90 then (to_timestamp(vip_expires_time)::date - interval '3 month')::date           when vip_days = 365 then (to_timestamp(vip_expires_time)::date - interval '1 year')::date           else null end as begin_date,       to_timestamp(vip_expires_time)::date as end_date,       row_number() over (partition by order_num order by created_at) as rn    from all_order_log    where environment =1 and status =1      --and app_id<>'osd13469466'), tmp_oversea_order as (    select distinct t1.app_id,t1.cs_order_id,t1.order_num,t1.vip_days ,t1.status,t1.pay_type ,t1.money,platform_order_id    from public."oversea-api_osd_order" t1    where environment=1 and order_type =4 -- and status in(1,3)   -- environment= 生产 order_type= 订阅会员    and to_timestamp(created_at)::date>='2024-07-01'      -- and to_timestamp(created_at)::date >= (current_date+interval '-1 day')::date -- 增 不可用), tmp_middle_subscription as (    select distinct product_id, uid ,order_id ,out_origin_order_id ,out_order_id  ,status as sub_status,payment_state -- 1正常2到期    ,to_timestamp(begin_time)::date::text as begin_date ,to_timestamp(end_time)::date::text as end_date    ,to_timestamp(end_time)::date-to_timestamp(begin_time)::date as diff_date    ,to_timestamp(created_at):: date as created_date    , row_number() over (partition by uid,order_id order by begin_time) as rn    from public.middle_subscription m            -- 订阅表    where environment=1 and status>0             -- evironment = 1 生产 status>0 1:正常,2:到期,3:暂停,4:退款    and to_timestamp(created_at)::date>='2024-07-01'      -- and to_timestamp(created_at)::date >= (current_date+interval '-1 day')::date -- 增 不可用    -- order by order_id ,out_order_id),    tmp_middle_subscription_order as (        select * from tmp_middle_subscription left join middle_order on order_id = id) -- select count(*) from tmp_all_order_log --  198033 -- select count(*) from tmp_middle_subscription    --683562 -- select count(*) from tmp_oversea_order --  2223699 -- select count(*) from tmp_all_order_log t1 left join tmp_oversea_order t2 on t1.order_num=t2.order_num -- 198049 -- all_order_log 和 tmp_middle_subscription -- 159601 -- 通过platform_order_id关联试试 不行因为all_order_log 中platform_order_id 不全 --  select count(*) from tmp_all_order_log t1 join tmp_middle_subscription_order t2  on  t1.platform_order_id = t2.platform_order_id -- 162093--     select begin_date,count(distinct t1.uid) from tmp_all_order_log t1 left join tmp_middle_subscription_order t2  on  t1.platform_order_id = t2.platform_order_id--     group by begin_date    --select * from tmp_middle_subscription where order_id = 82471715027247104--  以下通过时间关联 判断是否为续订    select        count(*)    from (    select t1.order_num,t1.uid,t1.created_at,t1.order_date,t1.created_date,t2.cs_order_id,t2.vip_days,t2.status,t2.app_id    from tmp_all_order_log t1 left join tmp_oversea_order t2 on t1.order_num=t2.order_num    ) t3    left join tmp_middle_subscription t4        on t3.cs_order_id=t4.order_id               and( to_timestamp(created_at)::date = begin_date::date                        or to_timestamp(created_at)::date + 1 = begin_date::date                        or to_timestamp(created_at)::date + 2 = begin_date::date                        or to_timestamp(created_at)::date - 1 = begin_date::date                        or to_timestamp(created_at)::date - 2 = begin_date::date)               and t3.cs_order_id is not null and t4.diff_date >=7  and app_id != 'osd13469466'              -- 159601     where begin_date is null-- 以下对每个订单以时间排序做关联--      select--         *--     from (--         select t1.order_num,t1.uid,t1.created_at,t1.order_date,t1.created_date,t2.cs_order_id,t2.vip_days,t2.status,t2.app_id,--                row_number() over (partition by t1.uid,cs_order_id order by created_at) as rn--         from tmp_all_order_log t1 left join tmp_oversea_order t2 on t1.order_num=t2.order_num--     ) t3--     left join tmp_middle_subscription t4--         on t3.cs_order_id=t4.order_id--                and t3.uid = t4.uid--                and t3.rn = t4.rn--                and t3.cs_order_id is not null and t4.diff_date >=7  and app_id != 'osd13469466' ;             -- 159878